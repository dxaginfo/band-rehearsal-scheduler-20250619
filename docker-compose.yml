version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    container_name: band-rehearsal-scheduler-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: band_rehearsal_scheduler
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: band-rehearsal-scheduler-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: band-rehearsal-scheduler-backend
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/band_rehearsal_scheduler
      REDIS_URL: redis://redis:6379
      PORT: 5000
      JWT_SECRET: ${JWT_SECRET:-supersecretkey}
      FRONTEND_URL: http://localhost:8080
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network

  # Frontend React app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: band-rehearsal-scheduler-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - app-network

# Persistent volumes
volumes:
  postgres-data:

# Networks
networks:
  app-network:
    driver: bridge